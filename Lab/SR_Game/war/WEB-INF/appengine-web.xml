<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
  <application></application>
  <version>1</version>

  <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->
  <threadsafe>true</threadsafe>

  <!-- Configure serving/caching of GWT files -->
  <static-files>
    <include path="**" />

    <!-- The following line requires App Engine 1.3.2 SDK -->
    <include path="**.nocache.*" expiration="0s" />

    <include path="**.cache.*" expiration="365d" />
    <exclude path="**.gwt.rpc" />
  </static-files>

  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
  </system-properties>

  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

    With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->
<sessions-enabled>true</sessions-enabled>
<async-session-persistence enabled="true" />

</appengine-web-app>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:s="http://www.springframework.org/s"
    xmlns:context="http://www.springframework.org/schema/context"
 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
 
 
http://www.springframework.org/schema/context
 
 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
 
 
http://www.springframework.org/schema/jms
 
 
http://www.springframework.org/schema/jms/spring-jms-2.5.xsd
 
 
http://www.springframework.org/schema/util
 
 
http://www.springframework.org/schema/util/spring-util-2.0.xsd
 
 
http://camel.apache.org/schema/spring
 
 
http://camel.apache.org/schema/spring/camel-spring.xsd">
 
    <camelContext xmlns="http://camel.apache.org/schema/spring" />
 
    <!-- ActiveMQ JMS -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
        p:brokerURL="tcp://localhost:61616" />
 
    <jms:listener-container container-type="default" destination-type="topic" connection-factory="connectionFactory" acknowledge="auto">
        <jms:listener destination="feed-message-topic" ref="messengerRemoteService" method="onMessage" />
    </jms:listener-container>
 
    <bean id="messengerRemoteService" init-method="init" class="edu.game.server.GreetingServiceImpl">
    </bean>
</beans>
